# Advent of Code 2023 Day 14

```elixir
Mix.install([
  {:kino_aoc, "~> 0.1.5"}
])
```

## Prep

<!-- livebook:{"attrs":{"assign_to":"puzzle_input","day":"14","session_secret":"AOC_SESSION","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2023", "14", System.fetch_env!("LB_AOC_SESSION"))
```

```elixir
IO.puts(puzzle_input)
```

```elixir
dish =
  puzzle_input
  |> String.split("\n")
  |> Enum.map(&String.to_charlist/1)
  |> Enum.map(fn line ->
    Enum.map(line, fn
      ?O -> 1
      ?. -> 0
      ?# -> 0.0
    end)
  end)
```

```elixir
rotate = fn dish ->
  dish
  |> Enum.reverse()
  |> Enum.zip_with(&Function.identity/1)
end
```

```elixir
tilt = fn dish ->
  dish
  |> Enum.map(fn line ->
    line
    |> Stream.chunk_by(&is_integer/1)
    |> Enum.map(&Enum.sort/1)
    |> List.flatten()
  end)
end
```

```elixir
load = fn dish ->
  dish
  |> Stream.map(fn line ->
    line
    |> Stream.with_index(1)
    |> Stream.map(&Tuple.product/1)
    |> Enum.sum()
  end)
  |> Enum.sum()
  |> trunc()
end
```

```elixir
dish = rotate.(dish)
```

## Part 1

```elixir
dish |> tilt.() |> load.()
```

## Part 2

```elixir
cycle = fn dish ->
  dish
  |> tilt.()
  |> rotate.()
  |> tilt.()
  |> rotate.()
  |> tilt.()
  |> rotate.()
  |> tilt.()
  |> rotate.()
end
```

```
0 -> 1 -> 3 -> 4 -> 5
          ^         |
          |         v
          8 <- 7 <- 6
```

```elixir
before_enter_loop =
  {dish, MapSet.new()}
  |> Stream.iterate(fn {dish, seen} ->
    {cycle.(dish), MapSet.put(seen, dish)}
  end)
  |> Enum.find_index(fn {dish, seen} -> dish in seen end)
```

```elixir
loop_length =
  dish
  |> Stream.iterate(cycle)
  |> Stream.drop(before_enter_loop)
  |> Enum.reduce_while(MapSet.new(), fn dish, seen ->
    if dish in seen do
      {:halt, seen}
    else
      {:cont, MapSet.put(seen, dish)}
    end
  end)
  |> MapSet.size()
```

```elixir
remainder = rem(1_000_000_000 - before_enter_loop + loop_length, loop_length)
```

```elixir
dish
|> Stream.iterate(cycle)
|> Enum.at(before_enter_loop - loop_length + remainder)
|> load.()
```

<!-- livebook:{"offset":2167,"stamp":{"token":"XCP.8oty9yjyAor9wToG1Jh77GyDnSjiST1CdfHjFXIDZjI3oKsWvFcCGwj4Md410fGI-UKgcDAq_KnHmuRDDE0njnQ1I2Zr2s3DFjQ4EkOWj7FRnocBkvU","version":2}} -->
